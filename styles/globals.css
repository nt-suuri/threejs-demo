:root {
  font-family: Inter, system-ui, Genos, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  /* background-color: #242424; */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer components {
  :is(a, button, input, textarea, select, details, summary):focus-visible {
    outline: theme("colors.current") dotted 0.188rem;
    outline-offset: 0.188rem;
  }

  .filter-white {
    filter: invert(1) hue-rotate(180deg);
  }

  .transition-filter {
    transition: filter 220ms linear;
    -webkit-transition: -webkit-filter 220ms linear;
  }
}

@layer utilities {
  ::-webkit-scrollbar {
    width: 15px;
  }

  ::-webkit-scrollbar-track {
    background-color: #f1f1f1;
  }

  ::-webkit-scrollbar-thumb {
    background-color: hsl(223, 100%, 75%);
    border-radius: 20px;
    border: 3px solid transparent;
    background-clip: content-box;
  }

  ::-webkit-scrollbar-thumb:hover {
    background-color: theme("colors.current");
  }
}

/* Page Loader */
.js .loading::before,
.js .loading::after {
  content: "";
}

.js .loading::before {
  /* top: 0;
	left: 0;
	width: 100%;
	height: 100%; */
  background: var(--color-bg);
}

.js .loading::after {
  /* top: 50%;
	left: 50%;
	margin: -30px 0 0 -30px;
	border-radius: 50%;
	opacity: 0.4;
	background: var(--color-link); */
  animation: loaderAnim 0.7s linear infinite alternate forwards;
}
#preloader {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100vh;
  z-index: 100;
  background-color: #0f0f0f;
  flex-direction: column;
}
#percent {
  color: white;
  font-family: "Neutral Face";
}
#bar {
  width: 60%;
  margin-top: 20px;
}
#barconfrm {
  width: 1%;
  padding: 1px 0px;
  background-color: white;
}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(0.5, 0.5, 1);
  }
}

a {
  text-decoration: none;
  color: var(--color-link);
  outline: none;
  cursor: pointer;
}

a:not(.frame__title-back) {
  white-space: nowrap;
  overflow: hidden;
  position: relative;
}

a:hover {
  color: var(--color-link-hover);
  outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
a:focus {
  /* Provide a fallback style for browsers
	 that don't support :focus-visible */
  outline: none;
  background: lightgrey;
}

a:focus:not(:focus-visible) {
  /* Remove the focus indicator on mouse-focus for browsers
	 that do support :focus-visible */
  background: transparent;
}

a:focus-visible {
  /* Draw a very noticeable focus style for
	 keyboard-focus on browsers that do support
	 :focus-visible */
  outline: 2px solid red;
  background: transparent;
}

.unbutton {
  background: none;
  border: 0;
  padding: 0;
  margin: 0;
  font: inherit;
  cursor: pointer;
}

.unbutton:focus {
  outline: none;
}

main {
  height: 100vh;
  display: flex;
  flex-direction: column;
}
.frame {
  color: var(--color-title);
  padding: 1rem 2rem;
  margin-bottom: 3rem;
  grid-gap: 2rem;
  align-items: start;
  text-transform: lowercase;
  font-size: 0.75rem;
}

.frame a:not(.frame__title-back)::before {
  content: "";
  height: 1px;
  width: 100%;
  background: currentColor;
  position: absolute;
  top: 90%;
  transition: transform 0.3s;
  transform-origin: 0% 50%;
}

.frame a:not(.frame__title-back):hover::before {
  transform: scaleX(0);
  transform-origin: 100% 50%;
}

.frame__title {
  grid-area: title;
  display: flex;
}

.frame__title-main {
  font-size: inherit;
  margin: 0;
  font-weight: inherit;
}

.frame__title-back {
  position: relative;
  display: flex;
  align-items: flex-end;
}

.frame__title-back span {
  display: none;
}

.frame__title-back svg {
  fill: currentColor;
}

.frame__prev {
  grid-area: prev;
  align-self: start;
}

.ascii {
  color: var(--color-link);
  opacity: 0.5;
  position: fixed;
  right: 0;
  top: -1rem;
  pointer-events: none;
}

.webgl {
  position: fixed;
  top: 0;
  left: 0;
  outline: none;
}

.section {
  display: flex;
  align-items: center;
  height: 100vh;
  position: relative;
  font-family: "Cabin", sans-serif;
  text-transform: uppercase;
  font-size: 7vmin;
  padding-left: 10%;
  padding-right: 10%;
}

section:nth-child(odd) {
  justify-content: flex-end;
}

dt {
  font-weight: bold;
}

dd {
  margin: 0;
}

.effects {
  margin-top: auto;
  padding: 2rem;
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.effects button {
  border: 0;
  color: inherit;
  white-space: nowrap;
  background: none;
  text-transform: inherit;
  font: inherit;
  cursor: pointer;
  color: var(--color-link);
  font-size: 0.75rem;
  text-transform: lowercase;
}

.effects button::before {
  content: "[";
  margin-right: 0.5rem;
  display: inline-block;
}

.effects button::after {
  content: "]";
  margin-left: 0.5rem;
  display: inline-block;
}

.effects button:hover {
  color: var(--color-link-hover);
}

.splitting .words .word {
  white-space: nowrap;
}

@media screen and (min-width: 53em) {
  .frame {
    display: grid;
    grid-template-columns: auto auto 1fr;
    grid-template-rows: auto;
    grid-template-areas: "title prev sponsor";
  }
}

@font-face {
  font-family: "Venera";
  font-style: normal;
  font-weight: 900;
  src: local("Unbounded"),
    url(../assets/fonts/Venera-900.ttf) format("truetype");
}

/* @media (prefers-color-scheme: light) {
} */
